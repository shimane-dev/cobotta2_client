'!TITLE "EVP2(EasyVisionPicking2)テンプレート"' アプローチ長	100mm' デパート長	100mm' ロボット待機位置	    P[0] (P[0]にてカメラ撮影するのでロボットがカメラの視界に入らない様に注意してください。)' プレース位置          P[1]' EVP2Runにて、カメラ撮影＆画像処理＆ワーク位置取得＆下記のデータにセットされる' 見つかったワーク個数	I[0]' 見つかったワーク位置	P[10], P[11], ... , P[10+見つかったワーク個数-1]' プログラムの流れ' P[0]へ移動 -> カメラ撮影＆画像処理 -> 見つかったワーク位置とP[1]を往復する。（見つかったワーク個数分だけ繰り返す） -> P[0]へ移動#Include "Variant.h"Dim ctrl As ObjectSub Main	Dim EVP2ProjectName As String	Dim WorkHeight As Single	Dim RobotWaitNumber As Integer	Dim PlaceNumber As Integer	Dim NumberOfWorks As Integer	Dim WorkPlaceNumber As Integer	Dim PickingAdjustID As Integer	Dim index As Long	EVP2ProjectName = "try_camera"	' EVPプロジェクトファイル名	WorkHeight = 20				' ワークからの高さ(テスト用安全マージン) [mm]	RobotWaitNumber = 0			' ロボット待機位置のP変数番号	PlaceNumber = 1				' プレース位置のP変数番号	NumberOfWorks = 0			' 見つかったワーク個数のI変数番号 (EVP2ガイダンスで設定した番号と合わせてください)	WorkPlaceNumber = 10		' 見つかったワーク位置のP変数開始番号 (EVP2ガイダンスで設定した番号と合わせてください)	PickingAdjustID = 1			' PA 把持位置補正ID	TakeArm Keep = 0	' EVP2初期設定 (EVP2プロジェクトファイル選択)	'Call EVP2Initialize(EVP2ProjectName)	' ロボット待機位置P[0]へ移動	Move P, P[RobotWaitNumber]End SubSub EVP2Initialize(ByVal EVP2ProjectName as String)	' EVP2オブジェクトの作成	ctrl = Cao.AddController("Runner", "CaoProv.DENSO.EVP2", "", "@IfnotMember")	' プログラム動作中にEVP2プロジェクトファイルを切替	ctrl.LoadFile EVP2ProjectNameEnd SubSub EVP2Run(ByVal NumberOfWorks As Integer, ByVal WorkPlaceNumber As Integer, ByVal WorkHeight As Integer, ByVal PickingAdjustID As Integer)	Dim index As Long	' 画像処理を実行	ctrl.Run	' ワーク位置をP[10], P[11], ..., P[10+見つかったワーク個数-1]へ格納	For index = 0 To I[NumberOfWorks] - 1		' PA 把持位置補正		' P[WorkPlaceNumber + index] = PickingAdjustmentConvPos(PickingAdjustID, P[WorkPlaceNumber + index])		' ワークの高さをP[10], P[11], ..., P[10+見つかったワーク個数-1]へ設定		LetZ P[WorkPlaceNumber + index] = PosZ(P[WorkPlaceNumber + index]) + WorkHeight	NextEnd Sub